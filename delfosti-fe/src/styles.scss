
@use 'styles/_reset';
@use 'styles/_variables';
@use 'styles/_themes';
@use 'styles/_fonts';
@import "styles/_media";

/* You can add global styles to this file, and also import other style files */
@import '@fortawesome/fontawesome-free/scss/fontawesome.scss';
@import '@fortawesome/fontawesome-free/scss/solid.scss';
@import '@fortawesome/fontawesome-free/scss/regular.scss';
@import '@fortawesome/fontawesome-free/scss/brands.scss';

@import 'mdb-angular-ui-kit/assets/scss/mdb.scss';

html {
  scroll-behavior: smooth;
  height: 100%;
}

body {
  font-size: var(--font-size-base);
  font-family: var(--font-family-1);
  font-weight: 400;
  line-height: 1.2;
  color: var(--black);
  background-color: var(--grey-light);
  * {
    font-family: var(--font-family-1);
  }
  height: 100%;
}

.background-in {
  background: radial-gradient(
    185.32% 100% at 50% 100%,
    var(--blue-5) 0%,
    var(--blue-1) 100%
  );
  position: fixed;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  overflow-y: scroll;
  scrollbar-width: thin;
  -webkit-overflow-scrolling: touch;
}

.adaptative-icon {
  font-size: 1.5rem;
  @media (max-width: 768px) {
    font-size: 1.3rem;
  }
}

.text-center{
  text-align: center;
}

.border-box {
  box-sizing: border-box;
}

.d-xxs-none {
  display: none;
  @media (max-width: 330px) {
    display: none;
  }
}

.full-img-bg {
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center;
}

.bold-text {
  font-weight: bold;
}
.font-weight-900 {
  font-weight: 900;
}

.font-family-1 {
  font-family: var(--font-family-1);
  *:not(i) {font-family: var(--font-family-1);}
}
.font-family-2 {
  font-family: var(--font-family-2);
  *:not(i) {font-family: var(--font-family-2);}
}

.d-xxl-flex {
  @include media-breakpoint-up(xxl) {
    display: flex !important;
  }
}

.d-xxl-block {
  @include media-breakpoint-up(xxl) {
    display: block !important;
  }
}

.d-xxl-none {
  @include media-breakpoint-up(xxl) {
    display: none !important;
  }
}

.col-xxxxl-4 {
  @include media-breakpoint-up(xxxxl) {
    flex: 0 0 25%;
    max-width: 25%;
  }
}

@each $txt, $val in variables.$colors {
  // Override MDBootstrap colors
  .#{$txt}-text {
    color: $val !important;
  }
  .#{$txt}-border {
    border: 1px solid $val !important;
  }
  .#{$txt} {
    background-color: $val !important;
  }
}

@each $txt, $val in variables.$font-sizes {
  .font-size-#{$txt} {
    font-size: var(--font-size-#{$txt}) !important;
  }
}

@each $txt, $val in variables.$custom-spaces {
  .m-#{$txt} {
    margin: $val;
  }
  .my-#{$txt} {
    margin-top: $val;
    margin-bottom: $val;
  }
  .mx-#{$txt} {
    margin-left: $val;
    margin-right: $val;
  }
  .p-#{$txt} {
    padding: $val;
  }
  .pt-#{$txt} {
    padding-top: $val;
    padding-bottom: $val;
  }
  .pb-#{$txt} {
    padding-top: $val;
    padding-bottom: $val;
  }
  .py-#{$txt} {
    padding-top: $val;
    padding-bottom: $val;
  }
  .px-#{$txt} {
    padding-left: $val;
    padding-right: $val;
  }
}

@each $txt, $val in variables.$line-heights {
  .line-height-#{$txt} {
    line-height: $val;
  }
}

@each $txt, $val in variables.$widths {
  // Override MDBootstrap colors
  .w-#{$txt} {
    width: $val;
  }
  .maxw-#{$txt} {
    max-width: $val;
  }
  .minw-#{$txt} {
    min-width: $val;
  }

  .h-#{$txt} {
    height: $val;
  }
  .maxh-#{$txt} {
    max-height: $val;
  }
  .minh-#{$txt} {
    min-height: $val;
  }
}

@each $txt, $val in variables.$letter-spacing {
  .ls-#{$txt} {
    letter-spacing: $val;
  }
}

@for $i from 1 through 5 {
  .text-clip-#{$i} {
    --line-height: 1.2;
    display: -webkit-box;
    -webkit-line-clamp: #{$i};
    -webkit-box-orient: vertical;
    overflow: hidden;
    max-height: calc(#{$i} * var(--line-height));
  }

  .z-#{$i} {
    z-index: #{$i};
  }
}

@each $txt, $val in variables.$border-radius {
  .br-#{$txt} {
    border-radius: $val !important;
  }
  .br-right-#{$txt} {
    border-top-right-radius: $val !important;
    border-bottom-right-radius: $val !important;
  }
}

@each $txt, $val in variables.$border-style {
  .border-style-#{$txt} {
    border-style: $val !important;
  }
}

@each $txt, $val in variables.$positions {
  .#{$txt} {
    #{$txt}: $val !important;
  }
}

@each $txt, $val in variables.$bold-text-weigths {
  .bold-text-#{$txt} {
    font-weight: $val !important;
  }
}

@each $txt, $val in variables.$colors {
  .border-#{$txt}{
    border-color:  #{$val};
  }
}

.border-bottom{
  border-bottom: 1px solid;
}

.clip-word {
  text-overflow: ellipsis;
  white-space: nowrap;
  overflow: hidden;
}

.img-content {
  position: relative;
  overflow: hidden;
  width: 100%;
  height: 0;
  padding-top: 71%;
  background-color: var(--white);

  .img-display {
    width: 100%;
    min-height: 100%;
    height: 100%;
    vertical-align: top;
    position: absolute;
    top: 0;
    left: 0;
    object-fit: contain;
    object-position: center;
    transition: opacity 0.4s ease-in;
  }
  .img-display-cover {
    object-fit: cover;
  }
}
.img-lazy {
  opacity: 0;
  transition: opacity 0.4s ease-in;
  &.ng-lazyloaded {
    opacity: 1;
  }
}

.img-cover {
  background-size: cover;
  background-position: center center;
  background-repeat: no-repeat;
}
.img-contain {
  background-size: contain;
  background-position: center center;
  background-repeat: no-repeat;
}
.hero {
  @extend .font-family-2;
  min-height: 12rem;
  width: 100%;
  .hero-img {
    min-height: 15rem;
  }
  .hero-body {
    padding: 1rem 1rem;
  }
}
.read-more {
  text-decoration: underline;
  font-size: var(--font-size-2);
  font-weight: bold;
}

.custom-breadcrumb {
  display: flex;
  flex-flow: row wrap;
  font-size: var(--font-size-14px);
  font-family: var(--font-family-1);
  color: rgba(0, 0, 0, 0.45);

  .active {
    font-weight: bold;
  }

  .breadcrumb-item.breadcrumb-item-nowrap {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  }

  .breadcrumb-item + .breadcrumb-item::before {
    content: "/";
    vertical-align: middle;
  }
}
.col-1-5,
.col-sm-1-5,
.col-md-1-5,
.col-lg-1-5 .col-xl-1-5 {
  position: relative;
  width: 100%;
  padding-right: 15px;
  padding-left: 15px;
}
.h-unset {
  height: unset;
}
.overflow-visible {
  overflow-y: visible;
}
.overflow-scroll {
  overflow-y: scroll;
}

.contain {
  max-width: map-get(variables.$grid-breakpoints, xxl);
  margin-left: 1rem;
  margin-right: 1rem;
}
.contain-mb {
  // .contain .contain-mb
  margin-left: 0 !important;
  margin-right: 0 !important;
}

@mixin col-1-5($breakpoint: null) {
  @if $breakpoint {
    $breakpoint: -#{$breakpoint};
  }

  .col#{$breakpoint}-1-5 {
    flex: 0 0 20%;
    max-width: 20%;
  }
}

@include col-1-5;

@include media-breakpoint-down(sm) {
  .contain-sm {
    margin-left: 1rem;
    margin-right: 1rem;
  }

  .rounded-mb {
    border-radius: 0.25rem;
  }

  .d-mb-none {
    display: none !important;
  }
}

@include media-breakpoint-up(sm) {
  @include col-1-5(sm);
  .hero .hero-body {
    padding: 4rem 4.5rem;
  }
  .contain {
    margin-left: 1.5rem;
    margin-right: 1.5rem;
  }
}
@include media-breakpoint-up(md) {
  @include col-1-5(md);
  .hero .hero-body {
    min-height: 30rem;
    padding: 3.5rem 6rem;
  }

  .contain {
    margin-left: 3rem;
    margin-right: 3rem;
  }
}
@include media-breakpoint-up(lg) {
  @include col-1-5(lg);
  .w-lg-75 {
    width: 75%;
  }
}
@include media-breakpoint-up(xl) {
  @include col-1-5(xl);
  .hero .hero-body {
    width: 75%;
  }
}
@include media-breakpoint-up(xxl) {
  @include col-1-5(xxl);
  .hero .hero-body {
    padding: 3.5rem 8rem;
  }
  .contain {
    margin-left: auto;
    margin-right: auto;
  }
}

.modal-dialog-scrollable .modal-content {
  @media (min-width: 576px) {
    max-height: 100vh !important;
  }
}

.modal-dialog-scrollable .modal-body {
  overflow-y: auto;
  overflow-x: hidden;
}

.scrollbar-primary::-webkit-scrollbar {
  width: 8px;
}

.scrollbar-primary::-webkit-scrollbar-track {
  background-color: #f5f5f5;
}

.scrollbar-primary::-webkit-scrollbar-thumb {
  border-radius: 10px;
  -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.1);
  background-color: #092444;
}

.border-grey {
  border: 1px solid #ced4da !important;
}

.border-dark-grey {
  border: 1px solid #a6a8aa !important;
}

.background-grey {
  background-color: #eceff1;
}

.overtop {
  z-index: 1020;
}

strong {
  font-weight: bold;
}

mdb-error {
  top: 0;
  right: 0;
  text-align: center;
}

// MDB Select override
.custom-select.validate-success.ng-touched.ng-valid,
.custom-select.validate-success.ng-touched.ng-invalid {
  background: none;
  &:focus {
    box-shadow: none;
  }
}
.custom-select.validate-success.ng-touched.ng-valid {
  border-bottom: 2px solid #00c851;
  + label {
    color: #00c851;
  }
}
.custom-select.validate-error.ng-touched.ng-invalid {
  border-bottom: 2px solid #f44336;
  + label {
    color: #f44336;
  }
}

.custom-select {
  &:not(.box-select) {
    background: transparent;
    padding-top: 0.6rem;
  }
  &:focus {
    outline: none;
    box-shadow: none;
  }
}
// MDB Checkbox override
.form-check-input {
  margin-top: 0.1rem;
  cursor: pointer;
}
.custom-checkbox {
  padding-left: 0.175rem;
}
.custom-control-input ~ .custom-control-label::before {
  background-color: transparent;
  border-color: var(--primary-blue);
}
.custom-control-input:checked ~ .custom-control-label::before {
  border-color: var(--primary-blue);
  background-color: transparent;
}
.custom-control-input:focus ~ .custom-control-label::before {
  box-shadow: 0 0 0 0;
}
.custom-control-input:focus:not(:checked) ~ .custom-control-label::before {
  border-color: var(--primary-blue);
}
.custom-control-input:not(:disabled):active ~ .custom-control-label::before {
  background-color: var(--primary-blue);
}
.custom-checkbox .custom-control-input:checked ~ .custom-control-label::after {
  background-image: url("/assets/images/tick.svg");
}



.border-none {
  border: none;
}

.modal-body {
  @media (max-width: 992px) {
    height: calc(100vh - 5.5rem);
  }
  &.auto {
    @media (max-width: 992px) {
      height: auto;
    }
  }
}

.modal-full-height {
  width: 500px !important;
  @media (max-width: 992px) {
    width: 100% !important;
  }
}

.form-control:focus {
  outline-style: none !important;
  box-shadow: none !important;
  border-color: var(--light-grey);
}

.modal-footer {
  border-top: none;
}

.position-center {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
}

.position-center-abs {
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translateY(-50%) translateX(-50%);
}

.width-fit-content {
  width: fit-content !important;
}

.height-fit-content {
  height: fit-content !important;
}

.cursor-pointer {
  cursor: pointer;
}

.top {
  top: 0;
}

.top-50 {
  top: 50%;
}

.top-icon {
  top: -10px;
  right: -12px;
}

.bottom {
  bottom: 0;
}

.right {
  right: 0;
}

.right-search-icon {
  right: 10px;
}

.right-icon {
  right: 28px;
}

.left {
  left: 0;
}

textarea {
  resize: none;
}

.rounded {
  &.search {
    border-radius: 0rem 0.25rem 0.25rem 0rem !important;
  }
  &.top-right {
    border-radius: 0rem 0.25rem 0rem 0rem !important;
  }
}

.circle {
  border-radius: 50% !important;
}

.z-depth-1 {
  box-shadow: var(--z-depth-1) !important;
}
.z-depth-2 {
  box-shadow: var(--z-depth-2) !important;
}
.z-depth-3 {
  box-shadow: var(--z-depth-3) !important;
}

.flex-1 {
  flex: 1;
}

/* .toast-success{
  background-color: var(--green);
}

.toast-warning{
  background-color: var(--purple);
}

.toast-error{
  background-color: var(--red);
} */

// ---- ACCORDION ----- //

.answer {
  overflow: hidden;
  font-size: 0;
  opacity: 0;
  margin-top: 0;
  transition: opacity 0.3s ease, margin-top 0.4s 0.3s ease,
    font-size 0.4s 0.3s ease;
  &.open {
    margin-top: 0rem;
    opacity: 1;
    font-size: var(--font-size-14px);
    transition: font-size 0.3s ease, margin-top 0.3s ease,
      opacity 0.6s 0.3s ease;
  }
}
.question {
  transition: background-color 0.4s ease;
  padding-top: 0.6rem;
  padding-bottom: 0.6rem;
}

:host::ng-deep {
  ul,
  ol {
    padding-left: 15px;
  }

  ul {
    list-style: unset;
  }

  ol {
    list-style: decimal;
  }
}

.outline-none {
  outline: none !important;
}

.blur {
  filter: blur(4px);
}

.modal-information .modal-dynamic {
  overflow: hidden !important;
  border-radius: 20px !important;
}

.input-border-bottom-blue {
  border-bottom: 1px solid var(--blue-4f) !important;
}

.greyscale {
  filter: grayscale(1);
}

.modal-coupon {
  .modal-content {
    border-radius: 10px !important;
    overflow: hidden;
  }
}

*:focus {
  outline: none;
}

.mw-container {
  max-width: 90%;

  @media screen and (min-width: 992px) {
    max-width: 80%;
  }
}

.header-without-search {
  height: calc(100vh - 120px);
}

.header-with-countdown {
	height: calc(100vh - 185px);
	margin-top: 65px;
}

.header-with-search {
  height: calc(100vh - 197px);
}

.mw-banner-container {
  max-width: 100%;

  @media screen and (min-width: 992px) {
    max-width: 80%;
  }
}

.gradient-banner {
  &::after {
    position: absolute;
    content: "";
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    background: linear-gradient(90deg, rgba(0, 0, 0, 0.3), transparent);
  }
}

.card-product-container.col-xxxl-3 {
  @media screen and (min-width: 1920px) {
    width: 25% !important;
    flex: 0 0 25% !important;
  }
}


//Preload button
.button-preloader{
  width: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
}
.preloader {
  width: 20px;
  height: 20px;
  border: 5px solid #eee;
  border-top: 5px solid #4285f4;
  border-radius: 50%;
  animation-name: girar;
  animation-duration: 2s;
  animation-iteration-count: infinite;
  animation-timing-function: linear;
}
@keyframes girar {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

// BUTTON
.btn.disabled, .btn:disabled {
  opacity: 0.7;
}

.br-tr-15{
  border-radius: 15px 0px 0px 0px !important;
}

.br-tl-15{
  border-radius: 0px 15px 0px 0px !important;
}

.bg-origin-box{
  background-origin: content-box;
}

.bg-size-contain{
  background-size: contain;
}

.form-control{
  transition: none !important;
  box-shadow: none !important;
  line-height: normal !important;
}
.form-control.ng-invalid.ng-dirty{
  border-bottom: 1px red solid !important;
}
.checkbox.ng-invalid.ng-dirty{
  span{
    &::after{
      content: "Obligatorio";
      color: red !important;
      padding-left: 5px;
      font-size: bold;
    }
  }
}

.hover-underline{
  &:hover{
    text-decoration: underline;
  }
}

.sticky-top{
  position: fixed !important;
}

.body-space{
  padding-top: 83px;
  @include media-breakpoint-up(lg) {
    padding-top: 85px;
  }
}


.mw-popup-container {
  max-width: 350px;
  width: 100%;

  @include media-breakpoint-up(lg) {
    max-width: 60%;
  }

  @include media-breakpoint-up(xl) {
    max-width: 50%;
  }

  @include media-breakpoint-up(xxl) {
    max-width: 40%;
  }
}

.payment-screen {
  height: calc(100vh - 120px) !important;
}

//remember-modaal
.remember-modal .modal-content.modal-dynamic{
  max-width: 450px;
  margin : 0 auto;
}

.service-hover{
  width: 100%;
  transition: 0.2s;
}

.keep-expand{
  width: 250% !important;
}

.transition-2{
  transition: 0.2s;
}
